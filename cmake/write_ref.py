#!/usr/bin/python

import os
import sys
import fnmatch

def main():

	oldref = sys.argv[1]
	newref = sys.argv[2]
	version_filename = sys.argv[3]

	# if old and new ref are the same, the user was probably just messing 
	# around with something. I will not write a new tree Version file
	# unless it doesn't exist yet.

	if (oldref == newref) and os.access(version_filename, os.R_OK):
		sys.exit(0)
	
	print "Switched tree to ref: " + newref

	# I am writing the new ref to a version information file within 
	# the source tree.
	# It will coded into all library builds
	try:
		outfile = open(version_filename, 'w')
		outfile.write("/*\n")
		outfile.write("   this file is generated by write_ref.py !\n")
		outfile.write("   Editing it is futile!\n")
		outfile.write("*/\n")
		outfile.write("#ifndef TREE_REVISION\n")
		outfile.write("#define TREE_REVISION \"%s\"\n" % newref)
		outfile.write("#endif\n")

        finally:
                outfile.close()

	sys.exit(0)


if __name__ == '__main__':
        main()

